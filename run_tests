#!/bin/bash

cd data

#
# Create tests
#
../simtools create --infile example.json --outfile test.sim --man_file example.bpm.csv

if [ $? -ne 0 ]; then
	echo simtools create: TEST FAILED
	exit;
fi

diff test.sim example.raw.sim
if [ $? -ne 0 ]; then
	echo simtools create: check output file: TEST FAILED
	exit;
fi

#
# "sim" test
#
../sim test.sim 20 &> /dev/null
if [ $? -ne 0 ]; then
	echo sim executable: TEST FAILED
	exit;
fi

#
# QC tests; uses slightly larger input containing NaN & infinity values
#
mag='test.mag.txt'
xyd='test.xyd.txt'
cp example.larger_with_inf.sim qctest.sim
../simtools qc --infile qctest.sim --magnitude $mag --xydiff $xyd
md5mag=$(md5sum ${mag} | cut -d ' ' -f 1)
md5xyd=$(md5sum ${xyd} | cut -d ' ' -f 1)

pass=1
if [ $? -ne 0 ]; then
    echo "Non-zero exit status in QC mode"
    pass=0
elif [ $md5mag != '59547e67a4a2c442639bf79c32db64ff' ]; then
    echo "Incorrect checksum for magnitude output"
    pass=0
elif [ $md5xyd != '1bd5056c2ed5fe7fd5eec9299ba2581c' ]; then
    echo "Incorrect checksum for xydiff output"
    pass=0
else
    echo "QC output OK"
fi

if [ $pass -eq 0 ]; then
    echo simtools qc: TEST FAILED
    exit;
fi
rm -f $mag $xyd qctest.sim

#
# illuminus tests
#
ilntest="test.iln"
rm -f $ilntest
../simtools illuminus --infile test.sim --outfile $ilntest --man_file example.bpm.csv
if [ $? -ne 0 ]; then
	echo simtools illuminus [file]: TEST FAILED
	exit;
fi

diff test.iln example_1.iln
if [ $? -ne 0 ]; then
	echo simtools illuminus file: check output file: TEST FAILED
	exit;
fi

# test again from standard input
rm -f $ilntest
cat test.sim | ../simtools illuminus --infile - --outfile $ilntest --man_file example.bpm.csv
if [ $? -ne 0 ]; then
	echo simtools illuminus stdin: TEST FAILED
	exit;
fi

diff $ilntest example_1.iln
if [ $? -ne 0 ]; then
	echo simtools illuminus stdin: check output file: TEST FAILED
	exit;
fi


../simtools illuminus --end 3 --infile test.sim --outfile $ilntest --man_file example.bpm.csv
if [ $? -ne 0 ]; then
	echo simtools illuminus2: TEST FAILED
	exit;
fi

diff $ilntest example_2.iln
if [ $? -ne 0 ]; then
	echo simtools illuminus2: check output file: TEST FAILED
	exit;
fi

../simtools illuminus --start 3 --infile test.sim --outfile $ilntest --man_file example.bpm.csv
if [ $? -ne 0 ]; then
	echo simtools illuminus3: TEST FAILED
	exit;
fi

diff $ilntest example_3.iln
if [ $? -ne 0 ]; then
	echo simtools illuminus3: check output file: TEST FAILED
	exit;
fi

../simtools illuminus --end 3 --start 3 --infile test.sim --outfile $ilntest --man_file example.bpm.csv
if [ $? -ne 0 ]; then
	echo simtools illuminus4: TEST FAILED
	exit;
fi

diff $ilntest example_4.iln
if [ $? -ne 0 ]; then
	echo simtools illuminus4: check output file: TEST FAILED
	exit;
fi


#
# genosnp tests
#
../simtools genosnp --infile test.sim --outfile test.gsn --man_file example.bpm.csv
if [ $? -ne 0 ]; then
	echo simtools genosnp file: TEST FAILED
	exit;
fi

diff test.gsn example_1.gsn
if [ $? -ne 0 ]; then
	echo simtools genosnp file: check output file: TEST FAILED
	exit;
fi

# test again from standard input

cat test.sim | ../simtools genosnp --infile - --outfile test.gsn --man_file example.bpm.csv
if [ $? -ne 0 ]; then
	echo simtools genosnp stdin: TEST FAILED
	exit;
fi

diff test.gsn example_1.gsn
if [ $? -ne 0 ]; then
	echo simtools genosnp stdin: check output file: TEST FAILED
	exit;
fi

../simtools genosnp --start 1 --infile test.sim --outfile test.gsn --man_file example.bpm.csv
if [ $? -ne 0 ]; then
	echo simtools genosnp2: TEST FAILED
	exit;
fi

diff test.gsn example_2.gsn
if [ $? -ne 0 ]; then
	echo simtools genosnp2: check output file: TEST FAILED
	exit;
fi

../simtools genosnp --end 3 --infile test.sim --outfile test.gsn --man_file example.bpm.csv
if [ $? -ne 0 ]; then
	echo simtools genosnp3: TEST FAILED
	exit;
fi

diff test.gsn example_3.gsn
if [ $? -ne 0 ]; then
	echo simtools genosnp3: check output file: TEST FAILED
	exit;
fi

../simtools genosnp --end 3 --start 2 --infile test.sim --outfile test.gsn --man_file example.bpm.csv
if [ $? -ne 0 ]; then
	echo simtools genosnp4: TEST FAILED
	exit;
fi

diff test.gsn example_4.gsn
if [ $? -ne 0 ]; then
	echo simtools genosnp4: check output file: TEST FAILED
	exit;
fi

../g2i -v -k -b -i gtc2bed.json -o test
if [ $? -ne 0 ]; then
	echo g2i createBedFile: TEST FAILED
	exit;
fi

diff test.bed gtc2bed.bed
if [ $? -ne 0 ]; then
	echo g2i createBedFile: check output file: TEST FAILED
	exit;
fi



rm test.sim test.iln test.gsn

echo All tests successful
